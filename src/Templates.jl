module Templates

"""
    Templates

> Package documentation DSL.

Extract docstrings from the Julia documentation system and render to markdown files.
"""
Templates

import Expresso: Head, @H_str

export @file

macro file(args...) buildfile(args...) end

buildfile(ex::Expr) = buildfile(Head(ex), ex.args...)

buildfile(other...) = throw(ArgumentError("Invalid '@file' syntax."))

buildfile(h::H"tuple", t, s::AbstractString) = buildfile(h, t, Expr(:string, s))

buildfile(::H"tuple", target, source::Expr) = quote
    open(joinpath(dirname(@__FILE__), $(esc(target))), "w") do file
        println(" - '$($(esc(target)))'")
        println(file, "<!-- AUTOGENERATED. See 'docs/build.jl' for source. -->")
        $(Expr(:block, [buildwriter(arg) for arg in source.args]...))
    end
end

buildwriter(ex::Expr) = :(print(file, $(esc(ex))))

buildwriter(t::AbstractString) = Expr(:block,
    [buildwriter(p, iseven(n)) for (n, p) in enumerate(split(t, r"{{|}}"))]...
)

buildwriter(part, isdef) = isdef ?
    :(writemime(file, "text/plain", (@doc $(esc(parse(part)))))) :
    :(print(file, $(esc(part))))

end
